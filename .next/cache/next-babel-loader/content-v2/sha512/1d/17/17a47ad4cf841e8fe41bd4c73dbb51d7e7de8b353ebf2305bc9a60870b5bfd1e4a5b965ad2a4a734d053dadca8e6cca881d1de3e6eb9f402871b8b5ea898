{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\react-js-practice\\\\23_nextJS-bigger-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport { Fragment } from 'react';\nimport Head from 'next/head';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n};\n\nexport const getStaticProps = async context => {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://admin:7831371Ares1@reacttest.wvttz.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n};\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://admin:7831371Ares1@reacttest.wvttz.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/react-js-practice/23_nextJS-bigger-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","Fragment","Head","MeetupDetails","props","meetupData","title","description","image","address","getStaticProps","context","meetupId","params","client","connect","db","meetupsCollection","collection","selectedMeetup","findOne","_id","close","id","toString","getStaticPaths","meetups","find","toArray","fallback","paths","map","meetup"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,SAApC;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC9B,sBACC,QAAC,QAAD;AAAA,4BACC,QAAC,IAAD;AAAA,8BACC;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAKC,QAAC,YAAD;AACC,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KADzB;AAEC,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAFzB;AAGC,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAH3B;AAIC,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJ/B;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAcA,CAfD;;AAiBA,OAAO,MAAMG,cAAc,GAAG,MAAMC,OAAN,IAAiB;AAC9C;AACA,QAAMC,QAAQ,GAAGD,OAAO,CAACE,MAAR,CAAeD,QAAhC;AAEA,QAAME,MAAM,GAAG,MAAMf,WAAW,CAACgB,OAAZ,CAAoB,kGAApB,CAArB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,cAAc,GAAG,MAAMF,iBAAiB,CAACG,OAAlB,CAA0B;AAACC,IAAAA,GAAG,EAAErB,QAAQ,CAACY,QAAD;AAAd,GAA1B,CAA7B;AAEAE,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACNlB,IAAAA,KAAK,EAAE;AACNC,MAAAA,UAAU,EAAE;AACXkB,QAAAA,EAAE,EAAEJ,cAAc,CAACE,GAAf,CAAmBG,QAAnB,EADO;AAEXlB,QAAAA,KAAK,EAAEa,cAAc,CAACb,KAFX;AAGXG,QAAAA,OAAO,EAAEU,cAAc,CAACV,OAHb;AAIXD,QAAAA,KAAK,EAAEW,cAAc,CAACX,KAJX;AAKXD,QAAAA,WAAW,EAAEY,cAAc,CAACZ;AALjB;AADN;AADD,GAAP;AAWA,CAzBM;AA2BP,OAAO,MAAMkB,cAAc,GAAG,YAAY;AACzC,QAAMX,MAAM,GAAG,MAAMf,WAAW,CAACgB,OAAZ,CAAoB,kGAApB,CAArB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMQ,OAAO,GAAG,MAAMT,iBAAiB,CAACU,IAAlB,CAAuB,EAAvB,EAA2B;AAACN,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCO,OAArC,EAAtB;AAEAd,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACNO,IAAAA,QAAQ,EAAE,KADJ;AAENC,IAAAA,KAAK,EAAEJ,OAAO,CAACK,GAAR,CAAYC,MAAM,KAAK;AAC7BnB,MAAAA,MAAM,EAAE;AAACD,QAAAA,QAAQ,EAAEoB,MAAM,CAACX,GAAP,CAAWG,QAAX;AAAX;AADqB,KAAL,CAAlB;AAFD,GAAP;AAMA,CAjBM;AAmBP,eAAerB,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\r\nimport {MongoClient, ObjectId} from 'mongodb';\r\nimport {Fragment} from 'react';\r\nimport Head from 'next/head';\r\n\r\nconst MeetupDetails = props => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Head>\r\n\t\t\t\t<title>{props.meetupData.title}</title>\r\n\t\t\t\t<meta name='description' content={props.meetupData.description}/>\r\n\t\t\t</Head>\r\n\t\t\t<MeetupDetail\r\n\t\t\t\timage={props.meetupData.image}\r\n\t\t\t\ttitle={props.meetupData.title}\r\n\t\t\t\taddress={props.meetupData.address}\r\n\t\t\t\tdescription={props.meetupData.description}\r\n\t\t\t/>\r\n\t\t</Fragment>\r\n\t)\r\n};\r\n\r\nexport const getStaticProps = async context => {\r\n\t// fetch data for a single meetup\r\n\tconst meetupId = context.params.meetupId;\r\n\r\n\tconst client = await MongoClient.connect('mongodb+srv://admin:7831371Ares1@reacttest.wvttz.mongodb.net/meetups?retryWrites=true&w=majority');\r\n\r\n\tconst db = client.db();\r\n\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\tconst selectedMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId)});\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetupData: {\r\n\t\t\t\tid: selectedMeetup._id.toString(),\r\n\t\t\t\ttitle: selectedMeetup.title,\r\n\t\t\t\taddress: selectedMeetup.address,\r\n\t\t\t\timage: selectedMeetup.image,\r\n\t\t\t\tdescription: selectedMeetup.description\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n\tconst client = await MongoClient.connect('mongodb+srv://admin:7831371Ares1@reacttest.wvttz.mongodb.net/meetups?retryWrites=true&w=majority');\r\n\r\n\tconst db = client.db();\r\n\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\tconst meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tfallback: false,\r\n\t\tpaths: meetups.map(meetup => ({\r\n\t\t\tparams: {meetupId: meetup._id.toString()}\r\n\t\t}))\r\n\t};\r\n};\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}