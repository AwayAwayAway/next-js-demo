{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\react-js-practice\\\\23_nextJS-bigger-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient, ObjectId } from 'mongodb';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\nexport const getStaticProps = async context => {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://admin:7831371Ares1@reacttest.wvttz.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n};\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://admin:7831371Ares1@reacttest.wvttz.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/react-js-practice/23_nextJS-bigger-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","MeetupDetails","props","meetupData","image","title","address","description","getStaticProps","context","meetupId","params","client","connect","db","meetupsCollection","collection","selectedMeetup","findOne","_id","close","getStaticPaths","meetups","find","toArray","fallback","paths","map","meetup","toString"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,SAApC;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC9B,sBACC,QAAC,YAAD;AACC,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADzB;AAEC,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFzB;AAGC,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH3B;AAIC,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ/B;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CARD;;AAUA,OAAO,MAAMC,cAAc,GAAG,MAAMC,OAAN,IAAiB;AAC9C;AAEA,QAAMC,QAAQ,GAAGD,OAAO,CAACE,MAAR,CAAeD,QAAhC;AAEA,QAAME,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CAAoB,kGAApB,CAArB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,cAAc,GAAG,MAAMF,iBAAiB,CAACG,OAAlB,CAA0B;AAACC,IAAAA,GAAG,EAAET;AAAN,GAA1B,CAA7B;AAEAE,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACNlB,IAAAA,KAAK,EAAE;AACNC,MAAAA,UAAU,EAAEc;AADN;AADD,GAAP;AAKA,CApBM;AAsBP,OAAO,MAAMI,cAAc,GAAG,YAAY;AACzC,QAAMT,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CAAoB,kGAApB,CAArB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMM,OAAO,GAAG,MAAMP,iBAAiB,CAACQ,IAAlB,CAAuB,EAAvB,EAA2B;AAACJ,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCK,OAArC,EAAtB;AAEAZ,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACNK,IAAAA,QAAQ,EAAE,KADJ;AAENC,IAAAA,KAAK,EAAEJ,OAAO,CAACK,GAAR,CAAYC,MAAM,KAAK;AAC7BjB,MAAAA,MAAM,EAAE;AAACD,QAAAA,QAAQ,EAAEkB,MAAM,CAACT,GAAP,CAAWU,QAAX;AAAX;AADqB,KAAL,CAAlB;AAFD,GAAP;AAMA,CAjBM;AAmBP,eAAe5B,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\r\nimport {MongoClient, ObjectId} from 'mongodb';\r\n\r\nconst MeetupDetails = props => {\r\n\treturn (\r\n\t\t<MeetupDetail\r\n\t\t\timage={props.meetupData.image}\r\n\t\t\ttitle={props.meetupData.title}\r\n\t\t\taddress={props.meetupData.address}\r\n\t\t\tdescription={props.meetupData.description}\r\n\t\t/>);\r\n};\r\n\r\nexport const getStaticProps = async context => {\r\n\t// fetch data for a single meetup\r\n\r\n\tconst meetupId = context.params.meetupId;\r\n\r\n\tconst client = await MongoClient.connect('mongodb+srv://admin:7831371Ares1@reacttest.wvttz.mongodb.net/meetups?retryWrites=true&w=majority');\r\n\r\n\tconst db = client.db();\r\n\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\tconst selectedMeetup = await meetupsCollection.findOne({_id: meetupId});\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetupData: selectedMeetup\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n\tconst client = await MongoClient.connect('mongodb+srv://admin:7831371Ares1@reacttest.wvttz.mongodb.net/meetups?retryWrites=true&w=majority');\r\n\r\n\tconst db = client.db();\r\n\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\tconst meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tfallback: false,\r\n\t\tpaths: meetups.map(meetup => ({\r\n\t\t\tparams: {meetupId: meetup._id.toString()}\r\n\t\t}))\r\n\t};\r\n};\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}