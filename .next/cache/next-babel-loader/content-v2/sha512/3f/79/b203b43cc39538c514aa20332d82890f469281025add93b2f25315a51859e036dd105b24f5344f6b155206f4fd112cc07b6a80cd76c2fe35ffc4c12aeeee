{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\react-js-practice\\\\23_nextJS-bigger-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { Fragment } from 'react';\nimport Head from 'next/head';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["D:/react-js-practice/23_nextJS-bigger-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","Fragment","Head","MeetupDetails","props","meetupData","title","image","address","description"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AAEA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC9B,sBACC,QAAC,QAAD;AAAA,4BACC,QAAC,IAAD;AAAA,6BACC;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,aADD,eAIC,QAAC,YAAD;AACC,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KADzB;AAEC,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBC,KAFzB;AAGC,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBG,OAH3B;AAIC,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ/B;AAAA;AAAA;AAAA;AAAA,aAJD;AAAA;AAAA;AAAA;AAAA;AAAA,WADD;AAaA,CAdD;;KAAMN,a;;AA8DN,eAAeA,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\r\nimport {MongoClient, ObjectId} from 'mongodb';\r\nimport {Fragment} from 'react';\r\nimport Head from 'next/head';\r\n\r\nconst MeetupDetails = props => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Head>\r\n\t\t\t\t<title>{props.meetupData.title}</title>\r\n\t\t\t</Head>\r\n\t\t\t<MeetupDetail\r\n\t\t\t\timage={props.meetupData.image}\r\n\t\t\t\ttitle={props.meetupData.title}\r\n\t\t\t\taddress={props.meetupData.address}\r\n\t\t\t\tdescription={props.meetupData.description}\r\n\t\t\t/>\r\n\t\t</Fragment>\r\n\t)\r\n};\r\n\r\nexport const getStaticProps = async context => {\r\n\t// fetch data for a single meetup\r\n\tconst meetupId = context.params.meetupId;\r\n\r\n\tconst client = await MongoClient.connect('mongodb+srv://admin:7831371Ares1@reacttest.wvttz.mongodb.net/meetups?retryWrites=true&w=majority');\r\n\r\n\tconst db = client.db();\r\n\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\tconst selectedMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId)});\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetupData: {\r\n\t\t\t\tid: selectedMeetup._id.toString(),\r\n\t\t\t\ttitle: selectedMeetup.title,\r\n\t\t\t\taddress: selectedMeetup.address,\r\n\t\t\t\timage: selectedMeetup.image,\r\n\t\t\t\tdescription: selectedMeetup.description\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n\tconst client = await MongoClient.connect('mongodb+srv://admin:7831371Ares1@reacttest.wvttz.mongodb.net/meetups?retryWrites=true&w=majority');\r\n\r\n\tconst db = client.db();\r\n\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\tconst meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tfallback: false,\r\n\t\tpaths: meetups.map(meetup => ({\r\n\t\t\tparams: {meetupId: meetup._id.toString()}\r\n\t\t}))\r\n\t};\r\n};\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}